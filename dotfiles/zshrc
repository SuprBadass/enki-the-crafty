export enki_location=${(%):-%N}

enki_location=`readlink $enki_location`
enki_location=`dirname $enki_location`
enki_location=$enki_location/..

export omz_custom_location=${enki_location}/.omz-custom
export ohmyzsh_location=${enki_location}/.oh-my-zsh

source ${enki_location}/scripts/source/source_my_scripts

load-node-env

export JENKINS_CREDS=plaplante:410b7e7a847169abd33394a6e600721d

# fortune | cowsay | lolcat
#archey

# tabtab source for serverless package
# uninstall by removing these lines or running `tabtab uninstall serverless`
[[ -f /Users/pat/node_modules/tabtab/.completions/serverless.zsh ]] && . /Users/pat/node_modules/tabtab/.completions/serverless.zsh
# tabtab source for sls package
# uninstall by removing these lines or running `tabtab uninstall sls`
[[ -f /Users/pat/node_modules/tabtab/.completions/sls.zsh ]] && . /Users/pat/node_modules/tabtab/.completions/sls.zsh

# Enables us to have .envrc file with specific env variable in a folder
eval "$(direnv hook zsh)"

# `v` is already mapped to visual mode, so we need to use a different key to
# open Vim
bindkey -v
bindkey -M vicmd "^V" edit-command-line

export PATH=~/Library/Python/2.7/bin:$PATH

export PATH=/Users/pat/.kiex/elixirs/elixir-1.6.1/bin:/Users/pat/.kiex/bin:$PATH
export PATH=/usr/local/sbin:$PATH
# Hook for desk activation
[ -n "$DESK_ENV" ] && source "$DESK_ENV" || true

# tabtab source for electron-forge package
# uninstall by removing these lines or running `tabtab uninstall electron-forge`
[[ -f /Users/pat/.nvm/versions/node/v9.5.0/lib/node_modules/electron-forge/node_modules/tabtab/.completions/electron-forge.zsh ]] && . /Users/pat/.nvm/versions/node/v9.5.0/lib/node_modules/electron-forge/node_modules/tabtab/.completions/electron-forge.zsh

export PATH="$HOME/.fastlane/bin:$PATH"

[ -s "/Users/pat/.jabba/jabba.sh" ] && source "/Users/pat/.jabba/jabba.sh"

export PATH="/Users/pat/.pyenv:$PATH"
eval "$(pyenv init -)"

. /Users/pat/.nix-profile/etc/profile.d/nix.sh
if which swiftenv > /dev/null; then eval "$(swiftenv init -)"; fi

#THIS MUST BE AT THE END OF THE FILE FOR SDKMAN TO WORK!!!
export SDKMAN_DIR="/Users/pat/.sdkman"
[[ -s "/Users/pat/.sdkman/bin/sdkman-init.sh" ]] && source "/Users/pat/.sdkman/bin/sdkman-init.sh"
